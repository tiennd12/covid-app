{"version":3,"file":"static/js/137.73209cfa.chunk.js","mappings":"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","sources":["ui-component/cards/Skeleton/CasesCard.js","views/dashboard/Default/CasesCard.js","ui-component/cards/Skeleton/PopularCard.js","views/dashboard/Default/PopularCard.js","views/dashboard/Default/RecoveryCard.js","views/dashboard/Default/DeathCard.js","ui-component/cards/Skeleton/TotalGrowthBarChart.js","views/dashboard/Default/TotalGrowthBarChart.js","views/dashboard/Default/index.js"],"sourcesContent":["// material-ui\r\nimport { Card, CardContent, Grid } from '@mui/material';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n\r\n// ==============================|| SKELETON - EARNING CARD ||============================== //\r\n\r\nconst CasesCard = () => (\r\n    <Card>\r\n        <CardContent>\r\n            <Grid container direction=\"column\">\r\n                <Grid item>\r\n                    <Grid container justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" width={44} height={44} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" width={34} height={34} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Skeleton variant=\"rectangular\" sx={{ my: 2 }} height={40} />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Skeleton variant=\"rectangular\" height={30} />\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nexport default CasesCard;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport { Avatar, Box, Grid, Menu, MenuItem, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonCasesCard from 'ui-component/cards/Skeleton/CasesCard';\r\n\r\n// // assets\r\n// import EarningIcon from 'assets/images/icons/earning.svg';\r\n// import MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\n// import ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\n// import GetAppTwoToneIcon from '@mui/icons-material/GetAppOutlined';\r\n// import FileCopyTwoToneIcon from '@mui/icons-material/FileCopyOutlined';\r\n// import PictureAsPdfTwoToneIcon from '@mui/icons-material/PictureAsPdfOutlined';\r\n// import ArchiveTwoToneIcon from '@mui/icons-material/ArchiveOutlined';\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    backgroundColor: theme.palette.warning.dark,\r\n    color: '#fff',\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.warning.light,\r\n        borderRadius: '50%',\r\n        top: -85,\r\n        right: -95,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -105,\r\n            right: -140\r\n        }\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.warning.light,\r\n        borderRadius: '50%',\r\n        top: -125,\r\n        right: -15,\r\n        opacity: 0.5,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -155,\r\n            right: -70\r\n        }\r\n    }\r\n}));\r\n\r\n// ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\r\n\r\nconst CasesCard = ({ isLoading, cases }) => {\r\n    const theme = useTheme();\r\n\r\n    // const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    // const handleClick = (event) => {\r\n    //     setAnchorEl(event.currentTarget);\r\n    // };\r\n\r\n    // const handleClose = () => {\r\n    //     setAnchorEl(null);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonCasesCard />\r\n            ) : (\r\n                <CardWrapper border={false} content={false}>\r\n                    <Box sx={{ p: 2.25 }}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item>\r\n                                <Grid container justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Typography\r\n                                            variant=\"h2\"\r\n                                            color=\"white\"\r\n                                        >\r\n                                            SỐ CA COVID\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Grid container alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                            { Intl.NumberFormat('en-US').format(cases) }\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item sx={{ mb: 1.25 }}>\r\n                                <Typography\r\n                                    sx={{\r\n                                        fontSize: '1rem',\r\n                                        fontWeight: 500,\r\n                                        color: theme.palette.warning.light,\r\n                                    }}\r\n                                >\r\n                                    Tính tới thời điểm hiện tại\r\n                                </Typography>\r\n                            </Grid> \r\n                        </Grid>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nCasesCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default CasesCard;\r\n","// material-ui\r\nimport { Card, CardContent, Grid } from '@mui/material';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ==============================|| SKELETON - POPULAR CARD ||============================== //\r\n\r\nconst PopularCard = () => (\r\n    <Card>\r\n        <CardContent>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" height={20} width={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton variant=\"rectangular\" height={150} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n        <CardContent sx={{ p: 1.25, display: 'flex', pt: 0, justifyContent: 'center' }}>\r\n            <Skeleton variant=\"rectangular\" height={25} width={75} />\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nexport default PopularCard;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, MenuItem, TextField, Typography, Card, CardContent } from '@mui/material';\r\n\r\n// third-party\r\nimport ApexCharts from 'apexcharts';\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\r\n\r\nconst PopularCard = ({ isLoading, injectionState, infectionState }) => {\r\n    const [injectionChartData, setInjectionChartData] = useState({});\r\n    const [infectionChartData, setInfectionChartData] = useState({});\r\n\r\n    const theme = useTheme();\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    const injectionCategories = injectionState ? [injectionState[0]?.date, injectionState[1]?.date, injectionState[2]?.date, injectionState[3]?.date] : ['test'];\r\n    const userNotVaccinated = injectionState ? [injectionState[0]?.userNotVaccinated, injectionState[1]?.userNotVaccinated, injectionState[2]?.userNotVaccinated, injectionState[3]?.userNotVaccinated] : ['test'];\r\n    const userVaccinatedOnce = injectionState ? [injectionState[0]?.userVaccinatedOnce, injectionState[1]?.userVaccinatedOnce, injectionState[2]?.userVaccinatedOnce, injectionState[3]?.userVaccinatedOnce] : ['test'];\r\n    const userVaccinatedTwice = injectionState ? [injectionState[0]?.userVaccinatedTwice, injectionState[1]?.userVaccinatedTwice, injectionState[2]?.userVaccinatedTwice, injectionState[3]?.userVaccinatedTwice] : ['test'];\r\n    const userVaccinatedThreeTimes = injectionState ? [injectionState[0]?.userVaccinatedThreeTimes, injectionState[1]?.userVaccinatedThreeTimes, injectionState[2]?.userVaccinatedThreeTimes, injectionState[3]?.userVaccinatedThreeTimes] : ['test'];\r\n\r\n    const infectionCategories = infectionState ? [infectionState[0]?.date, infectionState[1]?.date, infectionState[2]?.date, infectionState[3]?.date] : ['test'];\r\n    const totalUser = infectionState ? [infectionState[0]?.totalUser, infectionState[1]?.totalUser, infectionState[2]?.totalUser, infectionState[3]?.totalUser] : ['test'];\r\n    const userInfected = infectionState ? [infectionState[0]?.userInfected, infectionState[1]?.userInfected, infectionState[2]?.userInfected, infectionState[3]?.userInfected] : ['test'];\r\n    const userNotInfected = infectionState ? [infectionState[0]?.userNotInfected, infectionState[1]?.userNotInfected, infectionState[2]?.userNotInfected, infectionState[3]?.userNotInfected] : ['test'];\r\n\r\n    const injectionChart = {\r\n        height: 480,\r\n        type: 'bar',\r\n        options: {\r\n            chart: {\r\n                id: 'bar-chart',\r\n                stacked: true,\r\n                toolbar: {\r\n                    show: true\r\n                },\r\n                zoom: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            responsive: [\r\n                {\r\n                    breakpoint: 480,\r\n                    options: {\r\n                        legend: {\r\n                            position: 'bottom',\r\n                            offsetX: -10,\r\n                            offsetY: 0\r\n                        }\r\n                    }\r\n                }\r\n            ],\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: false,\r\n                    columnWidth: '50%'\r\n                }\r\n            },\r\n            xaxis: {\r\n                type: 'category',\r\n                categories: injectionCategories\r\n            },\r\n            legend: {\r\n                show: true,\r\n                fontSize: '14px',\r\n                fontFamily: `'Roboto', sans-serif`,\r\n                position: 'bottom',\r\n                offsetX: 20,\r\n                labels: {\r\n                    useSeriesColors: false\r\n                },\r\n                markers: {\r\n                    width: 16,\r\n                    height: 16,\r\n                    radius: 5\r\n                },\r\n                itemMargin: {\r\n                    horizontal: 15,\r\n                    vertical: 8\r\n                }\r\n            },\r\n            fill: {\r\n                type: 'solid'\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            grid: {\r\n                show: true\r\n            }\r\n        },\r\n        series: [\r\n            {\r\n                name: 'Chưa tiêm',\r\n                data: userNotVaccinated,\r\n                color: '#f1c40f'\r\n            },\r\n            {\r\n                name: 'Tiêm 1 mũi',\r\n                data: userVaccinatedOnce,\r\n                color: '#d63031'\r\n            },\r\n            {\r\n                name: 'Tiêm 2 mũi',\r\n                data: userVaccinatedTwice,\r\n                color: '#686de0'\r\n            },\r\n            {\r\n                name: 'Tiêm 3 mũi',\r\n                data: userVaccinatedThreeTimes,\r\n                color: '#2ecc71'\r\n            }\r\n        ],\r\n    };\r\n\r\n    const infectionChart = {\r\n        height: 510,\r\n        type: 'bar',\r\n        options: {\r\n            chart: {\r\n                id: 'bar-chart',\r\n                stacked: true,\r\n                toolbar: {\r\n                    show: true\r\n                },\r\n                zoom: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            responsive: [\r\n                {\r\n                    breakpoint: 480,\r\n                    options: {\r\n                        legend: {\r\n                            position: 'bottom',\r\n                            offsetX: -10,\r\n                            offsetY: 0\r\n                        }\r\n                    }\r\n                }\r\n            ],\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: false,\r\n                    columnWidth: '50%'\r\n                }\r\n            },\r\n            xaxis: {\r\n                type: 'category',\r\n                categories: infectionCategories\r\n            },\r\n            legend: {\r\n                show: true,\r\n                fontSize: '14px',\r\n                fontFamily: `'Roboto', sans-serif`,\r\n                position: 'bottom',\r\n                offsetX: 20,\r\n                labels: {\r\n                    useSeriesColors: false\r\n                },\r\n                markers: {\r\n                    width: 16,\r\n                    height: 16,\r\n                    radius: 5\r\n                },\r\n                itemMargin: {\r\n                    horizontal: 15,\r\n                    vertical: 8\r\n                }\r\n            },\r\n            fill: {\r\n                type: 'solid'\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            grid: {\r\n                show: true\r\n            }\r\n        },\r\n        series: [\r\n            {\r\n                name: 'Tổng số nhân viên',\r\n                data: totalUser,\r\n                color: '#686de0'\r\n            },\r\n            {\r\n                name: 'Số người nhiễm bệnh',\r\n                data: userInfected,\r\n                color: '#d63031'\r\n            },\r\n            {\r\n                name: 'Số người chưa nhiễm bệnh',\r\n                data: userNotInfected,\r\n                color: '#2ecc71'\r\n            }\r\n        ],\r\n    };\r\n\r\n    useEffect(() => {\r\n        setInjectionChartData(injectionChart);\r\n        setInfectionChartData(infectionChart);\r\n    }, [injectionState, infectionState]);\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonPopularCard />\r\n            ) : (\r\n                <MainCard>\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                <Grid item>\r\n                                    <Grid container direction=\"column\" spacing={1}>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"subtitle2\">Biểu đồ chi tiết</Typography>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"h3\">Số liệu COVID-19 tại tổ chức</Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item sm={6}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                <Typography variant=\"h4\" sx={{ height: '80px' }}>Dữ liệu tiêm vaccine theo số mũi đã tiêm tại tổ chức</Typography>\r\n                                    {injectionState && <Chart {...injectionChartData} />}\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item sm={6}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                <Typography variant=\"h4\" sx={{ height: '80px' }}>Tình hình nhiễm bệnh tại tổ chức</Typography>\r\n                                    {infectionState && <Chart {...infectionChartData} />}\r\n                                </CardContent>\r\n                            </Card>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </MainCard>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nPopularCard.propTypes = {\r\n    isLoading: PropTypes.bool,\r\n    everydayCases: PropTypes.array\r\n};\r\n\r\nexport default PopularCard;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material';\r\n\r\n// third-party\r\n// import Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/CasesCard';\r\n\r\n// import ChartDataMonth from './chart-data/total-order-month-line-chart';\r\n// import ChartDataYear from './chart-data/total-order-year-line-chart';\r\n\r\n// // assets\r\n// import LocalMallOutlinedIcon from '@mui/icons-material/LocalMallOutlined';\r\n// import ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    backgroundColor: theme.palette.success.dark,\r\n    color: '#fff',\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&>div': {\r\n        position: 'relative',\r\n        zIndex: 5\r\n    },\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.success.light,\r\n        borderRadius: '50%',\r\n        zIndex: 1,\r\n        top: -85,\r\n        right: -95,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -105,\r\n            right: -140\r\n        }\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.success.light,\r\n        borderRadius: '50%',\r\n        top: -125,\r\n        right: -15,\r\n        opacity: 0.5,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -155,\r\n            right: -70\r\n        }\r\n    }\r\n}));\r\n\r\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\r\n\r\nconst TotalOrderLineChartCard = ({ isLoading, recovered }) => {\r\n    const theme = useTheme();\r\n\r\n    const [timeValue, setTimeValue] = useState(false);\r\n    const handleChangeTime = (event, newValue) => {\r\n        setTimeValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonTotalOrderCard />\r\n            ) : (\r\n                <CardWrapper border={false} content={false}>\r\n                    <Box sx={{ p: 2.25 }}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item>\r\n                                <Grid container justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Typography\r\n                                            variant=\"h2\"\r\n                                            color=\"white\"\r\n                                        >\r\n                                            KHỎI BỆNH\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    {/* <Grid item>\r\n                                        <Avatar\r\n                                            variant=\"rounded\"\r\n                                            sx={{\r\n                                                ...theme.typography.commonAvatar,\r\n                                                ...theme.typography.mediumAvatar,\r\n                                                backgroundColor: theme.palette.secondary.dark,\r\n                                                color: theme.palette.secondary[200],\r\n                                                zIndex: 1\r\n                                            }}\r\n                                            aria-controls=\"menu-earning-card\"\r\n                                            aria-haspopup=\"true\"\r\n                                            onClick={handleClick}\r\n                                        >\r\n                                            <MoreHorizIcon fontSize=\"inherit\" />\r\n                                        </Avatar>\r\n                                        <Menu\r\n                                            id=\"menu-earning-card\"\r\n                                            anchorEl={anchorEl}\r\n                                            keepMounted\r\n                                            open={Boolean(anchorEl)}\r\n                                            onClose={handleClose}\r\n                                            variant=\"selectedMenu\"\r\n                                            anchorOrigin={{\r\n                                                vertical: 'bottom',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <GetAppTwoToneIcon sx={{ mr: 1.75 }} /> Import Card\r\n                                            </MenuItem>\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <FileCopyTwoToneIcon sx={{ mr: 1.75 }} /> Copy Data\r\n                                            </MenuItem>\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <PictureAsPdfTwoToneIcon sx={{ mr: 1.75 }} /> Export\r\n                                            </MenuItem>\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <ArchiveTwoToneIcon sx={{ mr: 1.75 }} /> Archive File\r\n                                            </MenuItem>\r\n                                        </Menu>\r\n                                    </Grid> */}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Grid container alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                            {Intl.NumberFormat('en-US').format(recovered)}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    {/* <Grid item>\r\n                                        <Avatar\r\n                                            sx={{\r\n                                                cursor: 'pointer',\r\n                                                ...theme.typography.smallAvatar,\r\n                                                backgroundColor: theme.palette.secondary[200],\r\n                                                color: theme.palette.secondary.dark\r\n                                            }}\r\n                                        >\r\n                                            <ArrowUpwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\r\n                                        </Avatar>\r\n                                    </Grid> */}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item sx={{ mb: 1.25 }}>\r\n                                <Typography\r\n                                    sx={{\r\n                                        fontSize: '1rem',\r\n                                        fontWeight: 500,\r\n                                        color: theme.palette.success.light\r\n                                    }}\r\n                                >\r\n                                    Tính tới thời điểm hiện tại\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalOrderLineChartCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalOrderLineChartCard;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport { Avatar, Box, Grid, Menu, MenuItem, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonCasesCard from 'ui-component/cards/Skeleton/CasesCard';\r\n\r\n// // assets\r\n// import EarningIcon from 'assets/images/icons/earning.svg';\r\n// import MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\n// import ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\n// import GetAppTwoToneIcon from '@mui/icons-material/GetAppOutlined';\r\n// import FileCopyTwoToneIcon from '@mui/icons-material/FileCopyOutlined';\r\n// import PictureAsPdfTwoToneIcon from '@mui/icons-material/PictureAsPdfOutlined';\r\n// import ArchiveTwoToneIcon from '@mui/icons-material/ArchiveOutlined';\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    backgroundColor: theme.palette.error.dark,\r\n    color: '#fff',\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.error.light,\r\n        borderRadius: '50%',\r\n        top: -85,\r\n        right: -95,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -105,\r\n            right: -140\r\n        }\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.error.light,\r\n        borderRadius: '50%',\r\n        top: -125,\r\n        right: -15,\r\n        opacity: 0.5,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -155,\r\n            right: -70\r\n        }\r\n    }\r\n}));\r\n\r\n// ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\r\n\r\nconst CasesCard = ({ isLoading, deaths }) => {\r\n    const theme = useTheme();\r\n\r\n    // const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    // const handleClick = (event) => {\r\n    //     setAnchorEl(event.currentTarget);\r\n    // };\r\n\r\n    // const handleClose = () => {\r\n    //     setAnchorEl(null);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonCasesCard />\r\n            ) : (\r\n                <CardWrapper border={false} content={false}>\r\n                    <Box sx={{ p: 2.25 }}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item>\r\n                                <Grid container justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Typography\r\n                                            variant=\"h2\"\r\n                                            color=\"white\"\r\n                                        >\r\n                                            TỬ VONG\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    {/* <Grid item>\r\n                                        <Avatar\r\n                                            variant=\"rounded\"\r\n                                            sx={{\r\n                                                ...theme.typography.commonAvatar,\r\n                                                ...theme.typography.mediumAvatar,\r\n                                                backgroundColor: theme.palette.secondary.dark,\r\n                                                color: theme.palette.secondary[200],\r\n                                                zIndex: 1\r\n                                            }}\r\n                                            aria-controls=\"menu-earning-card\"\r\n                                            aria-haspopup=\"true\"\r\n                                            onClick={handleClick}\r\n                                        >\r\n                                            <MoreHorizIcon fontSize=\"inherit\" />\r\n                                        </Avatar>\r\n                                        <Menu\r\n                                            id=\"menu-earning-card\"\r\n                                            anchorEl={anchorEl}\r\n                                            keepMounted\r\n                                            open={Boolean(anchorEl)}\r\n                                            onClose={handleClose}\r\n                                            variant=\"selectedMenu\"\r\n                                            anchorOrigin={{\r\n                                                vertical: 'bottom',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <GetAppTwoToneIcon sx={{ mr: 1.75 }} /> Import Card\r\n                                            </MenuItem>\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <FileCopyTwoToneIcon sx={{ mr: 1.75 }} /> Copy Data\r\n                                            </MenuItem>\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <PictureAsPdfTwoToneIcon sx={{ mr: 1.75 }} /> Export\r\n                                            </MenuItem>\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <ArchiveTwoToneIcon sx={{ mr: 1.75 }} /> Archive File\r\n                                            </MenuItem>\r\n                                        </Menu>\r\n                                    </Grid> */}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Grid container alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                            {Intl.NumberFormat('en-US').format(deaths)}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    {/* <Grid item>\r\n                                        <Avatar\r\n                                            sx={{\r\n                                                cursor: 'pointer',\r\n                                                ...theme.typography.smallAvatar,\r\n                                                backgroundColor: theme.palette.secondary[200],\r\n                                                color: theme.palette.secondary.dark\r\n                                            }}\r\n                                        >\r\n                                            <ArrowUpwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\r\n                                        </Avatar>\r\n                                    </Grid> */}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item sx={{ mb: 1.25 }}>\r\n                                <Typography\r\n                                    sx={{\r\n                                        fontSize: '1rem',\r\n                                        fontWeight: 500,\r\n                                        color: theme.palette.error.light\r\n                                    }}\r\n                                >\r\n                                    Tính tới thời điểm hiện tại\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nCasesCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default CasesCard;\r\n","// material-ui\r\nimport { Card, CardContent, Grid } from '@mui/material';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ==============================|| SKELETON TOTAL GROWTH BAR CHART ||============================== //\r\n\r\nconst TotalGrowthBarChart = () => (\r\n    <Card>\r\n        <CardContent>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={12}>\r\n                                    <Skeleton variant=\"text\" />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" height={50} width={80} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton variant=\"rectangular\" height={530} />\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nexport default TotalGrowthBarChart;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, MenuItem, TextField, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport ApexCharts from 'apexcharts';\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport SkeletonTotalGrowthBarChart from 'ui-component/cards/Skeleton/TotalGrowthBarChart';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n\r\n// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\r\n\r\nconst TotalGrowthBarChart = ({ isLoading, everydayCases }) => {\r\n    const [chartData, setChartData] = useState({});\r\n\r\n    const theme = useTheme();\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    const categories = everydayCases ? [everydayCases[0]?.date, everydayCases[1]?.date,everydayCases[2]?.date, everydayCases[3]?.date,everydayCases[4]?.date, everydayCases[5]?.date, everydayCases[6]?.date] : ['test'];\r\n    const cases = everydayCases ? [everydayCases[0]?.cases, everydayCases[1]?.cases,everydayCases[2]?.cases, everydayCases[3]?.cases,everydayCases[4]?.cases, everydayCases[5]?.cases, everydayCases[6]?.cases] : ['test'];\r\n    const deaths = everydayCases ? [everydayCases[0]?.death, everydayCases[1]?.death,everydayCases[2]?.death, everydayCases[3]?.death,everydayCases[4]?.death, everydayCases[5]?.death, everydayCases[6]?.death] : ['test'];\r\n    const recovered = everydayCases ? [everydayCases[0]?.recovered, everydayCases[1]?.recovered,everydayCases[2]?.recovered, everydayCases[3]?.recovered,everydayCases[4]?.recovered, everydayCases[5]?.recovered, everydayCases[6]?.recovered] : ['test'];\r\n\r\n    const chart = {\r\n        height: 480,\r\n\r\n        options: {\r\n            chart: {\r\n                id: 'bar-chart',\r\n                stacked: true,\r\n                toolbar: {\r\n                    show: true\r\n                },\r\n                zoom: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            responsive: [\r\n                {\r\n                    breakpoint: 480,\r\n                    options: {\r\n                        legend: {\r\n                            position: 'bottom',\r\n                            offsetX: -10,\r\n                            offsetY: 0\r\n                        }\r\n                    }\r\n                }\r\n            ],\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: false,\r\n                    columnWidth: '50%'\r\n                }\r\n            },\r\n            xaxis: {\r\n                type: 'category',\r\n                categories: categories\r\n            },\r\n            legend: {\r\n                show: true,\r\n                fontSize: '14px',\r\n                fontFamily: `'Roboto', sans-serif`,\r\n                position: 'bottom',\r\n                offsetX: 20,\r\n                labels: {\r\n                    useSeriesColors: false\r\n                },\r\n                markers: {\r\n                    width: 16,\r\n                    height: 16,\r\n                    radius: 5\r\n                },\r\n                itemMargin: {\r\n                    horizontal: 15,\r\n                    vertical: 8\r\n                }\r\n            },\r\n            fill: {\r\n                type: 'solid'\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            grid: {\r\n                show: true\r\n            }\r\n        },\r\n        series: [\r\n            {\r\n                name: 'Cases',\r\n                data: cases,\r\n                color: '#f1c40f'\r\n            },\r\n            {\r\n                name: 'Deaths',\r\n                data: deaths,\r\n                color: '#d63031'\r\n            },\r\n            {\r\n                name: 'Recovered',\r\n                data: recovered,\r\n                color: '#2ecc71'\r\n            }\r\n        ],\r\n    };\r\n\r\n    useEffect(() => {\r\n        setChartData(chart);\r\n    }, [everydayCases]);\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonTotalGrowthBarChart />\r\n            ) : (\r\n                <MainCard>\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                <Grid item>\r\n                                    <Grid container direction=\"column\" spacing={1}>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"subtitle2\">Biểu đồ chi tiết</Typography>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"h3\">Số liệu COVID-19 tại Việt Nam</Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {everydayCases && <Chart {...chartData} />}\r\n                        </Grid>\r\n                    </Grid>\r\n                </MainCard>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalGrowthBarChart.propTypes = {\r\n    isLoading: PropTypes.bool,\r\n    everydayCases: PropTypes.array\r\n};\r\n\r\nexport default TotalGrowthBarChart;\r\n","import { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { Grid } from '@mui/material';\r\n\r\n// project imports\r\nimport CasesCard from './CasesCard';\r\nimport PopularCard from './PopularCard';\r\nimport RecoveryCard from './RecoveryCard';\r\nimport DeathCard from './DeathCard';\r\n\r\nimport TotalGrowthBarChart from './TotalGrowthBarChart';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\nimport { doc, getDoc } from '@firebase/firestore';\r\nimport { db } from '../../../firebase/firebase';\r\n//axios\r\nimport axios from 'axios';\r\n\r\n// ==============================|| DEFAULT DASHBOARD ||============================== //\r\n\r\nconst Dashboard = () => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [cases, setCases] = useState(0);\r\n    const [deaths, setDeaths] = useState(0);\r\n    const [recovered, setRecovered] = useState(0);\r\n    const [everydayCases, setEverydayCases] = useState(null);\r\n    const [injectionState, setInjectionState] = useState(null);\r\n    const [infectionState, setInfectionState] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setLoading(false);\r\n        const fetchCases = async () => {\r\n            const { data } = await axios.post(\r\n                `https://static.pipezero.com/covid/data.json`\r\n            );\r\n            setCases(data.total.internal.cases);\r\n            setDeaths(data.total.internal.death);\r\n            setRecovered(data.total.internal.recovered);\r\n            setEverydayCases(data.overview);\r\n        };\r\n\r\n        fetchCases();\r\n\r\n        const getData = async () => {\r\n            const docSnap = await getDoc(doc(db, \"localStatData\", \"data\"))\r\n            if (docSnap.exists()) {\r\n                setInjectionState(docSnap.data().overview);\r\n                setInfectionState(docSnap.data().infectionStat);\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }\r\n\r\n        getData();\r\n    }, [cases, deaths, recovered]);\r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                        <CasesCard cases={cases} isLoading={isLoading} />\r\n                    </Grid>\r\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                        <RecoveryCard recovered={recovered} isLoading={isLoading} />\r\n                    </Grid>\r\n                    <Grid item lg={4} md={12} sm={12} xs={12}>\r\n                        <DeathCard deaths={deaths} isLoading={isLoading} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12} md={9}>\r\n                        <PopularCard isLoading={isLoading}  injectionState={injectionState} infectionState={infectionState}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <TotalGrowthBarChart everydayCases={everydayCases} isLoading={isLoading} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["Card","CardContent","Grid","container","direction","item","justifyContent","Skeleton","variant","width","height","sx","my","CardWrapper","styled","MainCard","theme","backgroundColor","palette","warning","dark","color","overflow","position","content","background","light","borderRadius","top","right","breakpoints","down","opacity","isLoading","cases","useTheme","border","Box","p","Typography","alignItems","fontSize","fontWeight","mr","mt","mb","Intl","NumberFormat","format","spacing","gridSpacing","xs","zeroMinWidth","display","pt","injectionState","infectionState","injectionChartData","setInjectionChartData","useState","infectionChartData","setInfectionChartData","injectionCategories","useSelector","state","customization","date","userNotVaccinated","userVaccinatedOnce","userVaccinatedTwice","userVaccinatedThreeTimes","infectionCategories","totalUser","userInfected","userNotInfected","injectionChart","type","options","chart","id","stacked","toolbar","show","zoom","enabled","responsive","breakpoint","legend","offsetX","offsetY","plotOptions","bar","horizontal","columnWidth","xaxis","categories","fontFamily","labels","useSeriesColors","markers","radius","itemMargin","vertical","fill","dataLabels","grid","series","name","data","infectionChart","useEffect","sm","success","zIndex","recovered","timeValue","setTimeValue","error","deaths","everydayCases","chartData","setChartData","death","setLoading","setCases","setDeaths","setRecovered","setEverydayCases","setInjectionState","setInfectionState","async","axios","total","internal","overview","fetchCases","docSnap","getDoc","doc","db","exists","infectionStat","console","log","getData","lg","md","RecoveryCard","DeathCard"],"sourceRoot":""}