{"version":3,"file":"static/js/263.c10269c2.chunk.js","mappings":"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","sources":["views/utilities/Main.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate,  Link as RouterLink } from \"react-router-dom\";\r\n\r\n\r\nimport { Link as MUILink } from \"@mui/material\";\r\nimport {\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  onAuthStateChanged,\r\n  signOut,\r\n} from \"firebase/auth\";\r\nimport {\r\n  auth,\r\n  queryGetUserInfoByEmail,\r\n  queryGetUserInfoByPhone,\r\n  queryGetUserInfoById,\r\n  injectionRef,\r\n  dataRef,\r\n  selfDeclareRef,\r\n} from \"../../firebase/firebase\";\r\n\r\nimport { onSnapshot, doc, setDoc, orderBy, getDocs } from \"@firebase/firestore\";\r\nimport { Typography, Stack, Container, Card, Box, CardContent, Button, Grid, TextField } from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst Main = () => {\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [authInfo, setAuthInfo] = useState(null);\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  //injectionRef\r\n  const [injectionInfo, setInjectionInfo] = useState({});\r\n  const [injectionId, setInjectionId] = useState(\"\");\r\n  //selfDeclareRef\r\n  const [declareRefInfo, setDeclareRefInfo] = useState(null);\r\n  const [declareRefId, setDeclareRefId] = useState(\"\");\r\n  //================\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(null);\r\n  const provider = new GoogleAuthProvider();\r\n  const navigate = useNavigate();\r\n\r\n  const [test, setTest] = useState(null);\r\n\r\n  const [injectionInfoQuery, setInjectionInfoQuery] = useState(\"\");\r\n  const [injectionIdQuery, setInjectionIdQuery] = useState(\"\");\r\n  const [userInfoQuery, setUserInfoQuery] = useState(\"\");\r\n  const [userIdQuery, setUserIdQuery] = useState(\"\");\r\n  const [queryPhone, setQueryPhone] = useState(\"\");\r\n  const [queryId, setQueryId] = useState(\"\");\r\n\r\n  const [cases, setCases] = useState([]);\r\n  const [location, setLocation] = useState(\"\");\r\n  const [todayCases, setTodayCases] = useState(\"\");\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    title: {\r\n      paddingBottom: '30px',\r\n      textTransform: 'uppercase',\r\n    },\r\n    box: {\r\n      padding: '10px',\r\n      borderRadius: '5px',\r\n      boxShadow: '2px 2px 4px rgba(0, 0, 0, 0.4)',\r\n    },\r\n    first: {\r\n      backgroundColor: '#dfe6e9',\r\n    },\r\n    second: {\r\n      backgroundColor: '#ecf0f1'\r\n    },\r\n    third: {\r\n      backgroundColor: '#eee'\r\n    },\r\n    grid: {\r\n      justifyContent: 'center',\r\n      marginBottom: '30px'\r\n    },\r\n    textField: {\r\n      margin: \"20px 0\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  // query dataa\r\n  const findInfoByPhoneHandler = (e) => {\r\n    e.preventDefault();\r\n    if (queryPhone) {\r\n      onSnapshot(\r\n        queryGetUserInfoByPhone(injectionRef, queryPhone),\r\n        (snapshot) => {\r\n          console.log(snapshot._snapshot.docChanges.length);\r\n          if (snapshot._snapshot.docChanges.length === 0) {\r\n            window.alert(\"Không tìm thấy dữ liệu người dùng\");\r\n          }\r\n\r\n          snapshot.forEach((data) => {\r\n            setInjectionInfoQuery(data.data());\r\n            setInjectionIdQuery(data.id);\r\n          });\r\n        }\r\n      );\r\n      onSnapshot(queryGetUserInfoByPhone(dataRef, queryPhone), (snapshot) => {\r\n        snapshot.forEach((data) => {\r\n          // console.log(data.data().phone);\r\n          setUserInfoQuery(data.data());\r\n          setUserIdQuery(data.id);\r\n        });\r\n      });\r\n    }\r\n    if (queryId) {\r\n      onSnapshot(queryGetUserInfoById(injectionRef, queryId), (snapshot) => {\r\n        console.log(snapshot);\r\n        if (snapshot._snapshot.docChanges.length === 0) {\r\n          window.alert(\"Không tìm thấy dữ liệu người dùng\");\r\n          setUserInfoQuery(\"\");\r\n        }\r\n\r\n        snapshot.forEach((data) => {\r\n          setInjectionInfoQuery(data.data());\r\n          setInjectionIdQuery(data.id);\r\n        });\r\n      });\r\n      onSnapshot(queryGetUserInfoById(dataRef, queryId), (snapshot) => {\r\n        snapshot.forEach((data) => {\r\n          // console.log(data.data().phone);\r\n          setUserInfoQuery(data.data());\r\n          setUserIdQuery(data.id);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  const goBackHandler = (e) => {\r\n    e.preventDefault();\r\n    setUserInfoQuery(\"\");\r\n  };\r\n\r\n  //axios\r\n  const fetchCases = async () => {\r\n    const { data } = await axios.post(\r\n      `https://static.pipezero.com/covid/data.json`\r\n    );\r\n    setCases(data.locations);\r\n  };\r\n\r\n  const getLocalCases = () => {\r\n    setTodayCases(cases[authInfo.districtId].casesToday);\r\n    setLocation(cases[authInfo.districtId].name);\r\n  };\r\n\r\n  // `date` is a `Date` object\r\n  const formatYmd = (date) => date.toISOString().slice(0, 10);\r\n  const d = new Date();\r\n  d.setDate(d.getDate() + 2);\r\n  // Example\r\n\r\n  useEffect(() => {\r\n\r\n    fetchCases();\r\n\r\n    onAuthStateChanged(auth, (currentUser) => {\r\n      if (currentUser) {\r\n        setIsLoggedIn(currentUser);\r\n        setUserEmail(currentUser.email);\r\n      } else {\r\n        setIsLoggedIn(null);\r\n      }\r\n    });\r\n\r\n    onSnapshot(dataRef, orderBy(\"name\", \"desc\"), (snapshot) => {\r\n      let users = [];\r\n      snapshot.docs.forEach((doc) => {\r\n        users.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setUserInfo(users);\r\n    });\r\n\r\n    if (isLoggedIn) {\r\n      onSnapshot(queryGetUserInfoByEmail(isLoggedIn.email), (snapshot) => {\r\n        snapshot.forEach((data) => {\r\n          setAuthInfo(data.data());\r\n          setPhone(data.data().phone);\r\n        });\r\n      });\r\n    }\r\n    if (phone) {\r\n      onSnapshot(queryGetUserInfoByPhone(injectionRef, phone), (snapshot) => {\r\n        snapshot.forEach((data) => {\r\n          setInjectionInfo(data.data());\r\n          setInjectionId(data.id);\r\n        });\r\n      });\r\n      onSnapshot(queryGetUserInfoByPhone(selfDeclareRef, phone), (snapshot) => {\r\n        snapshot.forEach((data) => {\r\n          setDeclareRefInfo(data.data());\r\n          setDeclareRefId(data.id);\r\n        });\r\n      });\r\n    }\r\n  }, [isLoggedIn, phone, queryId]);\r\n\r\n  useEffect(() => {\r\n    if (cases.length && authInfo) {\r\n      getLocalCases();\r\n    }\r\n  }, [cases, authInfo]);\r\n\r\n  return (\r\n    <Container className=\"container main\">\r\n      {isLoggedIn ? (\r\n        <Card>\r\n          {injectionInfo.numberOfInjections ? (\r\n            <CardContent>\r\n              {injectionInfo && (\r\n                <>\r\n                  {!injectionInfo.dataSubmitted ? (\r\n                    <Stack sx={{ height: '80vh', textAlign: 'center' }}>\r\n                      <Typography variant=\"h4\" >\r\n                        Chưa có dữ liệu tiêm chủng của bạn\r\n                      </Typography>\r\n                      <Typography>\r\n                        Vui lòng bấm vào đây để gửi yêu cầu xác nhận thông tin\r\n                        tiêm chủng\r\n                      </Typography>\r\n                    </Stack>\r\n                  ) : (\r\n                    <Typography variant=\"h2\" sx={{ textAlign: 'center' }} className={classes.title}>\r\n                      Bạn đã tiêm {injectionInfo?.numberOfInjections} vaccine\r\n                    </Typography>\r\n                  )}\r\n                  <Grid container spacing={5} className={classes.grid}>\r\n                    {injectionInfo?.firstDose === \"\" ? (\r\n                      <></>\r\n                    ) : (\r\n                      <Grid item md={4} >\r\n                        <Box className={`${classes.box} ${classes.first}`}>\r\n                          <TextField\r\n                            className={classes.textField}\r\n                            label=\" Mũi số 1: \"\r\n                            value={injectionInfo?.firstDose}\r\n                            InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                            fullWidth\r\n                          />\r\n                          <TextField\r\n                            className={classes.textField}\r\n                            label=\" Ngày tiêm : \"\r\n                            value={injectionInfo?.injectDate1}\r\n                            InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                            fullWidth\r\n                          />\r\n                          <TextField\r\n                            className={classes.textField}\r\n                            label=\" Đơn vị tiêm: \"\r\n                            value={injectionInfo?.injectPerson1}\r\n                            InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                            fullWidth\r\n                            multiline\r\n                            minRows={3}\r\n                          />\r\n                        </Box>\r\n                      </Grid>\r\n                    )}\r\n                    {injectionInfo.secondDose === \"\" ||\r\n                      injectionInfo.secondDose === \"Chưa tiêm\" ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <Grid item md={4}>\r\n                        <Box className={`${classes.box} ${classes.second}`}>\r\n                          <TextField\r\n                            className={classes.textField}\r\n                            label=\" Mũi số 2: \"\r\n                            value={injectionInfo?.secondDose}\r\n                            InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                            fullWidth\r\n                          />\r\n                          <TextField\r\n                            className={classes.textField}\r\n                            label=\" Ngày tiêm : \"\r\n                            value={injectionInfo?.injectDate2}\r\n                            InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                            fullWidth\r\n                          />\r\n\r\n                          <TextField\r\n                            className={classes.textField}\r\n                            label=\" Đơn vị tiêm: \"\r\n                            value={injectionInfo?.injectPerson3}\r\n                            InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                            fullWidth\r\n                            minRows={3}\r\n                            multiline\r\n                          />\r\n                        </Box>\r\n                      </Grid>\r\n                    )}\r\n                    {injectionInfo.thirdDose === \"\" ||\r\n                      injectionInfo.thirdDose === \"Chưa tiêm\" ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <Grid item md={4}>\r\n                        <Box className={`${classes.box} ${classes.third}`}>\r\n                          <TextField\r\n                            className={classes.textField}\r\n                            label=\"  Mũi số 3: \"\r\n                            value={injectionInfo?.thirdDose}\r\n                            InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                            fullWidth\r\n                          />\r\n                          <TextField\r\n                            className={classes.textField}\r\n                            label=\" Ngày tiêm : \"\r\n                            value={injectionInfo?.injectDate3}\r\n                            InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                            fullWidth\r\n                          />\r\n\r\n                          <TextField\r\n                            className={classes.textField}\r\n                            label=\" Đơn vị tiêm: \"\r\n                            value={injectionInfo?.injectPerson3}\r\n                            InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                            fullWidth\r\n                            minRows={3}\r\n                            multiline\r\n                          />\r\n                        </Box>\r\n                      </Grid>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid container>\r\n                    <Grid item>\r\n                      <Typography variant=\"subtitle1\" gutterBottom>\r\n                        Để yêu cầu thay đổi thông tin, vui lòng bấm\r\n                        <MUILink\r\n                          to=\"/utils/injection-info-request\"\r\n                          underline=\"none\"\r\n                          color=\"inherit\"\r\n                          component={RouterLink}\r\n                          sx={{ fontWeight: 'bold', m: 1 }}\r\n                        >\r\n                          <Button variant=\"outlined\" color=\"error\">vào đây</Button>\r\n                        </MUILink>\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </CardContent>\r\n          ) : (\r\n            <div>\r\n              <Typography variant=\"h5\" gutterBottom sx={{ textAlign: 'center' }}>\r\n                Bạn chưa có thông tin tiêm chủng\r\n              </Typography>\r\n            </div>\r\n          )}\r\n        </Card>\r\n      ) : (\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Vui lòng đăng nhập để tiếp tục\r\n        </Typography>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n\n  return alpha(color, 0.4);\n};\n\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["userInfo","setUserInfo","useState","authInfo","setAuthInfo","userEmail","setUserEmail","injectionInfo","setInjectionInfo","injectionId","setInjectionId","declareRefInfo","setDeclareRefInfo","declareRefId","setDeclareRefId","phone","setPhone","isLoggedIn","setIsLoggedIn","test","setTest","GoogleAuthProvider","useNavigate","injectionInfoQuery","setInjectionInfoQuery","injectionIdQuery","setInjectionIdQuery","userInfoQuery","setUserInfoQuery","userIdQuery","setUserIdQuery","queryPhone","setQueryPhone","queryId","setQueryId","cases","setCases","location","setLocation","todayCases","setTodayCases","classes","makeStyles","theme","title","paddingBottom","textTransform","box","padding","borderRadius","boxShadow","first","backgroundColor","second","third","grid","justifyContent","marginBottom","textField","margin","useStyles","d","Date","setDate","getDate","useEffect","async","data","axios","locations","fetchCases","onAuthStateChanged","auth","currentUser","email","onSnapshot","dataRef","orderBy","snapshot","users","docs","forEach","doc","push","id","queryGetUserInfoByEmail","queryGetUserInfoByPhone","injectionRef","selfDeclareRef","length","districtId","casesToday","name","className","numberOfInjections","dataSubmitted","variant","sx","textAlign","height","container","spacing","firstDose","item","md","label","value","InputProps","readOnly","fullWidth","injectDate1","injectPerson1","multiline","minRows","secondDose","injectDate2","injectPerson3","thirdDose","injectDate3","gutterBottom","to","underline","color","component","RouterLink","fontWeight","m","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","error","ownerState","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","Typography","overridesResolver","props","styles","root","capitalize","button","_extends","textDecoration","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","outline","border","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","React","inProps","ref","useThemeProps","onBlur","onFocus","TypographyClasses","other","_objectWithoutPropertiesLoose","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","focusVisible","setFocusVisible","handlerRef","useForkRef","slots","composeClasses","useUtilityClasses","_jsx","clsx","event","current","Object","keys","includes","Array","isArray"],"sourceRoot":""}