{"version":3,"file":"static/js/38.6f4ad24e.chunk.js","mappings":"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","sources":["views/utilities/InjectionInfoRequest.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport {\r\n  auth,\r\n  db,\r\n  queryGetUserInfoByEmail,\r\n  queryGetUserInfoByPhone,\r\n  dataRef,\r\n  injectionRequestRef,\r\n  storage,\r\n} from \"../../firebase/firebase\";\r\nimport { onSnapshot, doc, setDoc, orderBy, addDoc } from \"@firebase/firestore\";\r\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\r\n\r\nimport { Container, Button, TextField, Stack, MenuItem, FormControl, Select, InputLabel, Typography, Card, CardContent, Grid } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst InjectionInfoRequest = () => {\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [authInfo, setAuthInfo] = useState(null);\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [requestInfo, setRequestInfo] = useState({});\r\n  const [requestId, setRequestId] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(null);\r\n  const [requestUsers, setRequestUsers] = useState(\"\");\r\n\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  //inject info\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [place, setPlace] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [times, setTimes] = useState(\"\");\r\n\r\n  const [vaccineType1, setVaccineType1] = useState(\"\");\r\n  const [vaccineType2, setVaccineType2] = useState(\"\");\r\n  const [vaccineType3, setVaccineType3] = useState(\"\");\r\n\r\n  const [injectDate1, setInjectDate1] = useState(\"\");\r\n  const [injectDate2, setInjectDate2] = useState(\"\");\r\n  const [injectDate3, setInjectDate3] = useState(\"\");\r\n\r\n  const [injectPerson1, setInjectPerson1] = useState(\"\");\r\n  const [injectPerson2, setInjectPerson2] = useState(\"\");\r\n  const [injectPerson3, setInjectPerson3] = useState(\"\");\r\n\r\n  // upload img\r\n  const [imageUpload, setImageUpload] = useState(null);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    title: {\r\n      paddingBottom: '30px',\r\n      textTransform: 'uppercase',\r\n      textAlign: 'center',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  onAuthStateChanged(auth, (currentUser) => {\r\n    if (currentUser) {\r\n      setIsLoggedIn(currentUser);\r\n      setUserEmail(currentUser.email);\r\n    } else {\r\n      setIsLoggedIn(null);\r\n    }\r\n  });\r\n\r\n  const submitInfoHanlder = (e) => {\r\n    e.preventDefault();\r\n    if (imageUpload === null) return;\r\n    const imageRef = ref(storage, `${phone}/verifyImg`);\r\n    uploadBytes(imageRef, imageUpload).then(() => {\r\n      alert(\"Gửi lên thành công\");\r\n    });\r\n    const imageListRef = ref(storage, `${phone}/verifyImg`);\r\n    getDownloadURL(imageListRef).then((url) => {\r\n      setDoc(doc(db, \"injectionRequestData\", requestId), {\r\n        ...requestInfo,\r\n        numberOfInjections: times,\r\n        // idNumber: userIdNumber,\r\n        firstDose: vaccineType1,\r\n        secondDose: vaccineType2,\r\n        thirdDose: vaccineType3,\r\n        injectDate1: injectDate1,\r\n        injectDate2: injectDate2,\r\n        injectDate3: injectDate3,\r\n        injectPerson1: injectPerson1,\r\n        injectPerson2: injectPerson2,\r\n        injectPerson3: injectPerson3,\r\n        infectedTimes: \"\",\r\n        status: \"pending\",\r\n        imageProof: url,\r\n      });\r\n      setDate(\"\");\r\n      setPlace(\"\");\r\n      setTimes(\"\");\r\n    });\r\n    setVaccineType1(\"\");\r\n    setVaccineType2(\"\");\r\n    setVaccineType3(\"\");\r\n    setInjectDate1(\"\");\r\n    setInjectDate2(\"\");\r\n    setInjectDate3(\"\");\r\n    setInjectPerson1(\"\");\r\n    setInjectPerson2(\"\");\r\n    setInjectPerson3(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    // firebase\r\n    onSnapshot(dataRef, orderBy(\"name\", \"desc\"), (snapshot) => {\r\n      let users = [];\r\n      snapshot.docs.forEach((doc) => {\r\n        users.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setUserInfo(users);\r\n    });\r\n\r\n    if (isLoggedIn) {\r\n      onSnapshot(queryGetUserInfoByEmail(isLoggedIn.email), (snapshot) => {\r\n        snapshot.forEach((data) => {\r\n          setAuthInfo(data.data());\r\n          setPhone(data.data().phone);\r\n          setUserId(data.id);\r\n        });\r\n      });\r\n    }\r\n    onSnapshot(injectionRequestRef, (snapshot) => {\r\n      let users = [];\r\n      snapshot.docs.forEach((doc) => {\r\n        users.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setRequestUsers(users);\r\n    });\r\n    if (requestUsers) {\r\n      onSnapshot(\r\n        queryGetUserInfoByPhone(injectionRequestRef, phone),\r\n        (snapshot) => {\r\n          snapshot.forEach((data) => {\r\n            setRequestInfo(data.data());\r\n            setRequestId(data.id);\r\n          });\r\n          if (snapshot._snapshot.docChanges.length === 0) {\r\n            addDoc(injectionRequestRef, {\r\n              phone: phone,\r\n              firstDose: \"\",\r\n              secondDose: \"\",\r\n              thirdDose: \"\",\r\n              numberOfInjections: \"\",\r\n              status: \"none\",\r\n              name: authInfo.name,\r\n            });\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }, [isLoggedIn, userId, requestId]);\r\n\r\n  return (\r\n    <Container>\r\n      {isLoggedIn ? (\r\n        <Card>\r\n          <CardContent>\r\n            <Stack>\r\n              <Typography variant=\"h2\" className={classes.title} >\r\n                Thông tin yêu cầu\r\n              </Typography>\r\n            </Stack>\r\n            <Stack>\r\n              {requestInfo?.status === \"none\" ? (\r\n                <Typography variant=\"subtitle2\" sx={{ color: 'red' }}>*Chưa có yêu cầu nào</Typography>\r\n              ) : (\r\n                <Stack>\r\n                  {requestInfo?.status === \"pending\" ? (\r\n                    <Typography>Yêu cầu của bạn đang được xử lí</Typography>\r\n                  ) : (\r\n                    <Stack>\r\n                      {requestInfo?.status === \"approved\" ? (\r\n                        <Typography>\r\n                          Yêu cầu của bạn đã được chấp thuận, vui lòng kiểm tra\r\n                          thông tin được thay đổi\r\n                        </Typography>\r\n                      ) : (\r\n                        <Stack>\r\n                          {requestInfo?.status === \"rejected\" ? (\r\n                            <Typography>\r\n                              Yêu cầu của bạn đã bị từ chối với lí do:{\" \"}\r\n                              {requestInfo?.reason}\r\n                            </Typography>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </Stack>\r\n                      )}\r\n                    </Stack>\r\n                  )}\r\n                </Stack>\r\n              )}\r\n            </Stack>\r\n            <Stack>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                sx={{ margin: '20px 0', minWidth: 210 }}\r\n              >\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Số lần đã tiêm:{\" \"}\r\n                </InputLabel>\r\n                <Select\r\n                  label={\"Số lần đã tiêm\"}\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  className=\"addInfo-times\"\r\n                  onChange={(e) => setTimes(e.target.value)}\r\n                  value={times}\r\n                >\r\n                  <MenuItem value=\"Chưa tiêm\">Chưa tiêm </MenuItem>\r\n                  <MenuItem value=\"1 mũi\">1 lần</MenuItem>\r\n                  <MenuItem value=\"2 mũi\">2 lần</MenuItem>\r\n                  <MenuItem value=\"3 mũi\">3 lần</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Stack>\r\n            <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\r\n              <Grid item md={4}>\r\n                <Stack>\r\n                  <FormControl\r\n                    variant=\"outlined\"\r\n                    sx={{ marginTop: 1, minWidth: 210 }}\r\n                  >\r\n                    <InputLabel id=\"demo-simple-select-label\">Mũi 1</InputLabel>\r\n                    <Select\r\n                      label={\"Mũi 1\"}\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      onChange={(e) => setVaccineType1(e.target.value)}\r\n                      value={vaccineType1}\r\n                    >\r\n                      <MenuItem value=\"\" disabled>\r\n                        Chọn loại vaccine\r\n                      </MenuItem>\r\n                      <MenuItem value=\"Nanocovax\">Nanocovax</MenuItem>\r\n                      <MenuItem value=\"Pfizer-BioNTech\">Pfizer-BioNTech</MenuItem>\r\n                      <MenuItem value=\"AstraZeneca\">AstraZeneca</MenuItem>\r\n                      <MenuItem value=\"Moderna\">Moderna</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                  <TextField\r\n                    sx={{ marginTop: 1, minWidth: 210 }}\r\n                    id=\"standard-basic\"\r\n                    helperText=\"Ngày tiêm mũi 1\"\r\n                    variant=\"outlined\"\r\n                    type=\"date\"\r\n                    className=\"register-dob\"\r\n                    value={injectDate1}\r\n                    onChange={(e) => setInjectDate1(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    sx={{ marginTop: 1, minWidth: 210 }}\r\n                    autoComplete='off'\r\n                    id=\"standard-basic\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    label=\"Đơn vị tiêm mũi 1\"\r\n                    className=\"addInfo-findWithPhone\"\r\n                    value={injectPerson1}\r\n                    onChange={(e) => setInjectPerson1(e.target.value)}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n\r\n              <Grid item md={4}>\r\n                <Stack>\r\n                  <FormControl\r\n                    variant=\"outlined\"\r\n                    sx={{ marginTop: 1, minWidth: 210 }}\r\n                  >\r\n                    <InputLabel id=\"demo-simple-select-label\">Mũi 2</InputLabel>\r\n                    <Select\r\n                      label={\"Mũi 2\"}\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      onChange={(e) => setVaccineType2(e.target.value)}\r\n                      value={vaccineType2}\r\n                    >\r\n                      <MenuItem value=\"Chưa tiêm\" disabled>\r\n                        Chọn loại vaccine\r\n                      </MenuItem>\r\n                      <MenuItem value=\"Chưa tiêm\">Chưa tiêm</MenuItem>\r\n                      <MenuItem value=\"Nanocovax\">Nanocovax</MenuItem>\r\n                      <MenuItem value=\"Pfizer-BioNTech\">Pfizer-BioNTech</MenuItem>\r\n                      <MenuItem value=\"AstraZeneca\">AstraZeneca</MenuItem>\r\n                      <MenuItem value=\"Moderna\">Moderna</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                  <TextField\r\n                    sx={{ marginTop: 1, minWidth: 210 }}\r\n                    id=\"standard-basic\"\r\n                    helperText=\"Ngày tiêm mũi 2\"\r\n                    variant=\"outlined\"\r\n                    type=\"date\"\r\n                    className=\"register-dob\"\r\n                    value={injectDate2}\r\n                    onChange={(e) => setInjectDate2(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    sx={{ marginTop: 1, minWidth: 210 }}\r\n                    id=\"standard-basic\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    autoComplete='off'\r\n                    label=\"Đơn vị tiêm mũi 2\"\r\n                    className=\"addInfo-findWithPhone\"\r\n                    value={injectPerson2}\r\n                    onChange={(e) => setInjectPerson2(e.target.value)}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <Stack>\r\n                  <FormControl\r\n                    variant=\"outlined\"\r\n                    sx={{ marginTop: 1, minWidth: 210 }}\r\n                  >\r\n                    <InputLabel id=\"demo-simple-select-label\">Mũi 3</InputLabel>\r\n                    <Select\r\n                      label={\"Mũi 3\"}\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      onChange={(e) => setVaccineType3(e.target.value)}\r\n                      value={vaccineType3}\r\n                    >\r\n                      <MenuItem value=\"Chưa tiêm\" disabled>\r\n                        Chọn loại vaccine\r\n                      </MenuItem>\r\n                      <MenuItem value=\"Chưa tiêm\">Chưa tiêm</MenuItem>\r\n                      <MenuItem value=\"Nanocovax\">Nanocovax</MenuItem>\r\n                      <MenuItem value=\"Pfizer-BioNTech\">Pfizer-BioNTech</MenuItem>\r\n                      <MenuItem value=\"AstraZeneca\">AstraZeneca</MenuItem>\r\n                      <MenuItem value=\"Moderna\">Moderna</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                  <TextField\r\n                    sx={{ marginTop: 1, minWidth: 210 }}\r\n                    id=\"standard-basic\"\r\n                    helperText=\"Ngày tiêm mũi 3\"\r\n                    variant=\"outlined\"\r\n                    type=\"date\"\r\n                    className=\"register-dob\"\r\n                    value={injectDate3}\r\n                    onChange={(e) => setInjectDate3(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    sx={{ marginTop: 1, minWidth: 210 }}\r\n                    id=\"standard-basic\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    autoComplete='off'\r\n                    label=\"Đơn vị tiêm mũi 3\"\r\n                    className=\"addInfo-findWithPhone\"\r\n                    value={injectPerson3}\r\n                    onChange={(e) => setInjectPerson3(e.target.value)}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n            </Grid>\r\n            <Stack sx={{ alignItems: \"center\" }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component=\"label\"\r\n                className=\"addInfo-button\"\r\n                sx={{ width: 120, marginTop: 4 }}\r\n                color=\"info\"\r\n              >\r\n                Tải ảnh lên\r\n                <input\r\n                  hidden\r\n                  accept=\"image/*\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => setImageUpload(e.target.files[0])}\r\n                />\r\n              </Button>\r\n              <Typography sx={{ marginTop: 1 }}>{imageUpload?.name}</Typography>\r\n            </Stack>\r\n            <Stack sx={{ marginTop: 5, justifyContent: 'flex-end' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                onClick={submitInfoHanlder}\r\n                color=\"error\"\r\n              >\r\n                Gửi yêu cầu\r\n              </Button>\r\n            </Stack>\r\n          </CardContent>\r\n        </Card>\r\n      ) : (\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Vui lòng đăng nhập để tiếp tục\r\n        </Typography>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InjectionInfoRequest;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    disableGutters\n  };\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;"],"names":["userInfo","setUserInfo","useState","authInfo","setAuthInfo","userEmail","setUserEmail","requestInfo","setRequestInfo","requestId","setRequestId","isLoggedIn","setIsLoggedIn","requestUsers","setRequestUsers","userId","setUserId","phone","setPhone","place","setPlace","date","setDate","times","setTimes","vaccineType1","setVaccineType1","vaccineType2","setVaccineType2","vaccineType3","setVaccineType3","injectDate1","setInjectDate1","injectDate2","setInjectDate2","injectDate3","setInjectDate3","injectPerson1","setInjectPerson1","injectPerson2","setInjectPerson2","injectPerson3","setInjectPerson3","imageUpload","setImageUpload","classes","makeStyles","theme","title","paddingBottom","textTransform","textAlign","useStyles","onAuthStateChanged","auth","currentUser","email","useEffect","onSnapshot","dataRef","orderBy","snapshot","users","docs","forEach","doc","push","data","id","queryGetUserInfoByEmail","injectionRequestRef","queryGetUserInfoByPhone","_snapshot","docChanges","length","addDoc","firstDose","secondDose","thirdDose","numberOfInjections","status","name","variant","className","sx","color","reason","margin","minWidth","label","labelId","onChange","e","target","value","container","spacing","justifyContent","alignItems","item","md","marginTop","disabled","helperText","type","autoComplete","component","width","hidden","accept","multiple","files","onClick","preventDefault","imageRef","ref","storage","uploadBytes","then","alert","imageListRef","getDownloadURL","url","setDoc","db","infectedTimes","imageProof","gutterBottom","getMenuItemUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","dense","divider","disableGutters","gutters","_extends","typography","body1","display","position","textDecoration","minHeight","paddingTop","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","vars","palette","backgroundClip","backgroundColor","action","hover","menuItemClasses","primary","mainChannel","selectedOpacity","alpha","main","focusOpacity","hoverOpacity","focus","opacity","disabledOpacity","dividerClasses","marginBottom","marginLeft","listItemTextClasses","listItemIconClasses","breakpoints","up","body2","fontSize","React","inProps","useThemeProps","autoFocus","focusVisibleClassName","role","tabIndex","tabIndexProp","other","_objectWithoutPropertiesLoose","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","selected","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","undefined","_jsx","children","clsx","focusVisible"],"sourceRoot":""}