{"version":3,"file":"static/js/723.f02ae6e4.chunk.js","mappings":"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","sources":["views/utilities/SelfDeclare.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport {\r\n  auth,\r\n  db,\r\n  queryGetUserInfoByEmail,\r\n  queryGetUserInfoByPhone,\r\n  dataRef,\r\n  injectionRequestRef,\r\n  storage,\r\n  selfDeclareRef,\r\n  injectionRef,\r\n} from \"../../firebase/firebase\";\r\nimport { onSnapshot, doc, setDoc, orderBy, addDoc } from \"@firebase/firestore\";\r\n\r\nimport { Container, Card, Button, TextField, Stack, MenuItem, FormControl, Select, InputLabel, Typography, CardContent, Grid, Box } from \"@mui/material\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst SelfDeclare = () => {\r\n  const [totalUserInfo, setTotalUserInfo] = useState(\"\");\r\n  const [totalInjectionInfo, setTotalInjectionInfo] = useState([]);\r\n\r\n  const [infectedTimes, setInfectedTimes] = useState(\"\");\r\n\r\n  const [infectedDate1, setInfectedDate1] = useState(\"\");\r\n  const [infectedDate2, setInfectedDate2] = useState(\"\");\r\n  const [infectedDate3, setInfectedDate3] = useState(\"\");\r\n\r\n  const [curedDate1, setCuredDate1] = useState(\"\");\r\n  const [curedDate2, setCuredDate2] = useState(\"\");\r\n  const [curedDate3, setCuredDate3] = useState(\"\");\r\n\r\n  const [infectedNote1, setInfectedNote1] = useState(\"\");\r\n  const [infectedNote2, setInfectedNote2] = useState(\"\");\r\n  const [infectedNote3, setInfectedNote3] = useState(\"\");\r\n\r\n  const [userInfo, setUserInfo] = useState(\"\");\r\n  const [userRole, setUserRole] = useState(\"\");\r\n\r\n  const [declareRefInfo, setDeclareRefInfo] = useState(null)\r\n  const [declareRefId, setDeclareRefId] = useState(\"\")\r\n\r\n  const [injectRefInfo, setInjectRefInfo] = useState(null);\r\n  const [injectRefId, setInjectRefId] = useState(\"\");\r\n\r\n\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(null);\r\n\r\n  const [userId, setUserId] = useState(null);\r\n  // const [userIdNumber, setUserIdNumber] = useState(\"\");\r\n  const [injectionInfo, setInjectionInfo] = useState({});\r\n  const [injectionId, setInjectionId] = useState(\"\");\r\n  const [authInfo, setAuthInfo] = useState('');\r\n\r\n  const [isCurrentlyInfected, setIsCurrentlyInfected] = useState(false);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    header: {\r\n      marginBottom: '30px',\r\n      textTransform: 'uppercase',\r\n    },\r\n    textField: {\r\n      marginBottom: '22px'\r\n    },\r\n    box: {\r\n      border: '2px solid black',\r\n      borderRadius: '10px',\r\n      boxShadow: '1px 1px 2px rgba(0, 0, 0, 0.4)',\r\n      padding: '10px 0',\r\n      margin: '10px 0',\r\n    },\r\n    infected1: {\r\n      backgroundColor: '#dff9fb',\r\n    },\r\n    infected2: {\r\n      backgroundColor: '#dcdde1'\r\n    },\r\n    infected3: {\r\n      backgroundColor: '#fab1a0'\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  onAuthStateChanged(auth, (currentUser) => {\r\n    if (currentUser) {\r\n      setIsLoggedIn(currentUser);\r\n      setUserEmail(currentUser.email);\r\n    } else {\r\n      setIsLoggedIn(null);\r\n    }\r\n  });\r\n\r\n\r\n  const submitSelfDeclareHandler = (e) => {\r\n    e.preventDefault();\r\n    setDoc(doc(db, \"selfDeclareData\", declareRefId), {\r\n      ...declareRefInfo,\r\n      infectedDate1: infectedDate1,\r\n      infectedDate2: infectedDate2,\r\n      infectedDate3: infectedDate3,\r\n      infectedNote1: infectedNote1,\r\n      infectedNote2: infectedNote2,\r\n      infectedNote3: infectedNote3,\r\n      curedDate1,\r\n      curedDate2,\r\n      curedDate3,\r\n      isCurrentlyInfected,\r\n\r\n    });\r\n    // setDoc(doc(db, \"injectionData\", injectRefId), {\r\n    //   ...declareRefInfo,\r\n    //   infectedTimes: infectedTimes,\r\n    // });\r\n  };\r\n\r\n  useEffect(() => {\r\n    onSnapshot(dataRef, orderBy(\"name\", \"desc\"), (snapshot) => {\r\n      let users = [];\r\n      snapshot.docs.forEach((doc) => {\r\n        users.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setUserInfo(users);\r\n    });\r\n    if (isLoggedIn) {\r\n      onSnapshot(queryGetUserInfoByEmail(isLoggedIn.email), (snapshot) => {\r\n        snapshot.forEach((data) => {\r\n          setAuthInfo(data.data());\r\n          setPhone(data.data().phone);\r\n          setUserId(data.id);\r\n          setUserRole(data.data().assignedRole);\r\n        });\r\n      });\r\n      if (authInfo.name) {\r\n        onSnapshot(queryGetUserInfoByPhone(selfDeclareRef, phone), (snapshot) => {\r\n          if (snapshot._snapshot.docChanges.length === 0) {\r\n            addDoc(selfDeclareRef, {\r\n              phone: phone,\r\n              firstDose: \"\",\r\n              secondDose: \"\",\r\n              thirdDose: \"\",\r\n              numberOfInjections: \"\",\r\n              infectedTimes: \"\",\r\n              injectDate1: \"\",\r\n              injectDate2: \"\",\r\n              injectDate3: \"\",\r\n              injectPerson1: \"\",\r\n              injectPerson2: \"\",\r\n              injectPerson3: \"\",\r\n              name: authInfo.name,\r\n            });\r\n          }\r\n          snapshot.forEach((data) => {\r\n            setDeclareRefInfo(data.data());\r\n            setDeclareRefId(data.id);\r\n          });\r\n        }\r\n        );\r\n        onSnapshot(queryGetUserInfoByPhone(injectionRef, phone), (snapshot) => {\r\n          snapshot.forEach((data) => {\r\n            setInjectRefInfo(data.data());\r\n            setInjectRefId(data.id);\r\n          });\r\n        })\r\n      }\r\n    }\r\n  }, [isLoggedIn, userRole]);\r\n\r\n\r\n  return (\r\n    <Container>\r\n      {userRole === \"admin\" ||\r\n        userRole === \"moderator\" ||\r\n        userRole === \"user\" ? (\r\n        <Card>\r\n          {declareRefInfo ? (\r\n            <CardContent sx={{ textAlign: \"center\" }}>\r\n              <Grid container spacing={2} >\r\n                <Grid item sm={6}>\r\n                  <Typography variant=\"h4\" className={classes.header} gutterBottom>\r\n                    Thông tin người dùng\r\n                  </Typography>\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    label=\"Họ và tên:\"\r\n                    value={authInfo.name}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    label=\"Ngày tháng năm sinh:\"\r\n                    value={authInfo.dob}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    label=\"Số mũi đã tiêm:\"\r\n                    value={declareRefInfo.numberOfInjections}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    label=\"Mũi số 1:\"\r\n                    value={declareRefInfo.firstDose}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    label=\"Mũi số 2:\"\r\n                    value={declareRefInfo.secondDose}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    label=\"Mũi số 3:\"\r\n                    value={declareRefInfo.thirdDose}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    fullWidth\r\n                  />\r\n                  <Stack>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Lịch sử lây nhiễm\r\n                    </Typography>\r\n                    {declareRefInfo.infectedTimes === \"\" ? (\r\n                      <Typography variant=\"subtitle1\" gutterBottom>\r\n                        <em>Bạn chưa từng nhiễm bệnh</em>\r\n                      </Typography>\r\n                    ) : (\r\n                      <Stack>\r\n                        {declareRefInfo.infectedDate1 === \"\" ? (\r\n                          <></>\r\n                        ) : (\r\n                          <>\r\n                            <TextField\r\n                              className={classes.textField}\r\n                              label=\"Ngày nhiễm bệnh lần 1:\"\r\n                              value={declareRefInfo.infectedDate1}\r\n                              InputProps={{\r\n                                readOnly: true,\r\n                              }}\r\n                              fullWidth\r\n                            />\r\n                            <TextField\r\n                              className={classes.textField}\r\n                              label=\"Ngày khỏi bệnh:\"\r\n                              value={declareRefInfo.curedDate1}\r\n                              InputProps={{\r\n                                readOnly: true,\r\n                              }}\r\n                              fullWidth\r\n                            />\r\n                            <>\r\n                              {declareRefInfo.infectedNote1 === \"\" ? (\r\n                                <TextField\r\n                                  className={classes.textField}\r\n                                  label=\"Ghi chú\"\r\n                                  value=\"Không có\"\r\n                                  InputProps={{\r\n                                    readOnly: true,\r\n                                  }}\r\n                                  fullWidth\r\n                                />\r\n                              ) : (\r\n                                <TextField\r\n                                  className={classes.textField}\r\n                                  label=\"Ghi chú:\"\r\n                                  value={declareRefInfo.infectedNote1}\r\n                                  InputProps={{\r\n                                    readOnly: true,\r\n                                  }}\r\n                                  fullWidth\r\n                                />\r\n                              )}\r\n                            </>\r\n                          </>\r\n                        )}\r\n                        {declareRefInfo.infectedDate2 === \"\" ? (\r\n                          \"\"\r\n                        ) : (\r\n                          <>\r\n                            <TextField\r\n                              className={classes.textField}\r\n                              label=\"Ngày nhiễm bệnh lần 2:\"\r\n                              value={declareRefInfo.infectedDate2}\r\n                              InputProps={{\r\n                                readOnly: true,\r\n                              }}\r\n                              fullWidth\r\n                            />\r\n                            <TextField\r\n                              className={classes.textField}\r\n                              label=\"Ngày khỏi bệnh:\"\r\n                              value={declareRefInfo.curedDate2}\r\n                              InputProps={{\r\n                                readOnly: true,\r\n                              }}\r\n                              fullWidth\r\n                            />\r\n                            <>\r\n                              {declareRefInfo.infectedNote2 === \"\" ? (\r\n                                <TextField\r\n                                  className={classes.textField}\r\n                                  label=\"Không có\"\r\n                                  InputProps={{\r\n                                    readOnly: true,\r\n                                  }}\r\n                                  fullWidth\r\n                                />\r\n                              ) : (\r\n                                <TextField\r\n                                  className={classes.textField}\r\n                                  label=\"Ghi chú:\"\r\n                                  value={declareRefInfo.infectedNote2}\r\n                                  InputProps={{\r\n                                    readOnly: true,\r\n                                  }}\r\n                                  fullWidth\r\n                                />\r\n                              )}\r\n                            </>\r\n                          </>\r\n                        )}\r\n                        {declareRefInfo.infectedDate3 === \"\" ? (\r\n                          \"\"\r\n                        ) : (\r\n                          <>\r\n                            <TextField\r\n                              className={classes.textField}\r\n                              label=\"Ngày nhiễm bệnh lần 2:\"\r\n                              value={declareRefInfo.infectedDate3}\r\n                              InputProps={{\r\n                                readOnly: true,\r\n                              }}\r\n                              fullWidth\r\n                            />\r\n                            <TextField\r\n                              className={classes.textField}\r\n                              label=\"Ngày khỏi bệnh:\"\r\n                              value={declareRefInfo.curedDate3}\r\n                              InputProps={{\r\n                                readOnly: true,\r\n                              }}\r\n                              fullWidth\r\n                            />\r\n                            <>\r\n                              {declareRefInfo.infectedNote3 === \"\" ? (\r\n                                <TextField\r\n                                  className={classes.textField}\r\n                                  label=\"Không có\"\r\n                                  InputProps={{\r\n                                    readOnly: true,\r\n                                  }}\r\n                                  fullWidth\r\n                                />\r\n                              ) : (\r\n                                <TextField\r\n                                  className={classes.textField}\r\n                                  label=\"Ghi chú:\"\r\n                                  value={declareRefInfo.infectedNote3}\r\n                                  InputProps={{\r\n                                    readOnly: true,\r\n                                  }}\r\n                                  fullWidth\r\n                                />\r\n                              )}\r\n                            </>\r\n                          </>\r\n                        )}\r\n                      </Stack>\r\n                    )}\r\n                  </Stack>\r\n                </Grid>\r\n\r\n                <Grid item sm={6}>\r\n                  <Stack alignItems=\"center\" sx={{ textAlign: 'center' }}>\r\n                    <Typography variant=\"h4\" className={classes.header} gutterBottom>\r\n                      Tình trạng nhiễm bệnh hiện tại\r\n                    </Typography>\r\n                    <FormControl variant=\"outlined\" sx={{ m: 1, minWidth: 200, marginBottom: '30px' }}>\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Tình trạng nhiễm bệnh hiện tại\r\n                      </InputLabel>\r\n                      <Select\r\n                        label={\"Tình trạng nhiễm bệnh hiện tại\"}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        onChange={(e) => setIsCurrentlyInfected(e.target.value)}\r\n                        value={isCurrentlyInfected}\r\n                      >\r\n                        <MenuItem value=\"true\">Có</MenuItem>\r\n                        <MenuItem value=\"false\">Không</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                    <Typography variant=\"h4\" className={classes.header} gutterBottom>\r\n                      Khai báo số lần nhiễm bệnh\r\n                    </Typography>\r\n                    <FormControl variant=\"outlined\" sx={{ m: 1, minWidth: 200 }}>\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Số lần nhiễm bệnh\r\n                      </InputLabel>\r\n                      <Select\r\n                        label={\"Số lần nhiễm bệnh\"}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        onChange={(e) => setInfectedTimes(e.target.value)}\r\n                        value={infectedTimes}\r\n                      >\r\n                        <MenuItem value=\"\" disabled>\r\n                          Số lần nhiễm bệnh\r\n                        </MenuItem>\r\n                        <MenuItem value=\"1 lần\">1 lần</MenuItem>\r\n                        <MenuItem value=\"2 lần\">2 lần</MenuItem>\r\n                        <MenuItem value=\"3 lần\">3 lần</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n\r\n                    {infectedTimes === \"1 lần\" ? (\r\n                      <Grid container>\r\n                        <Grid item >\r\n                          <Box className={`${classes.box} ${classes.infected1}`}>\r\n                            <TextField\r\n                              sx={{ margin: 1, minWidth: 210 }}\r\n                              id=\"standard-basic\"\r\n                              helperText=\"Lần nhiễm số 1\"\r\n                              variant=\"outlined\"\r\n                              type=\"date\"\r\n                              className=\"register-dob\"\r\n                              value={infectedDate1}\r\n                              onChange={(e) => setInfectedDate1(e.target.value)}\r\n                            />\r\n                            <TextField\r\n                              sx={{ margin: 1, minWidth: 210 }}\r\n                              id=\"standard-basic\"\r\n                              helperText=\"Ngày khỏi bệnh\"\r\n                              variant=\"outlined\"\r\n                              type=\"date\"\r\n                              className=\"register-dob\"\r\n                              value={curedDate1}\r\n                              onChange={(e) => setCuredDate1(e.target.value)}\r\n                            />\r\n                            <TextField\r\n                              sx={{ margin: 1, minWidth: 210 }}\r\n                              id=\"standard-basic\"\r\n                              variant=\"outlined\"\r\n                              type=\"text\"\r\n                              label=\"Ghi chú lần 1\"\r\n                              className=\"addInfo-findWithPhone\"\r\n                              value={infectedNote1}\r\n                              onChange={(e) => setInfectedNote1(e.target.value)}\r\n                            />\r\n                          </Box>\r\n                        </Grid>\r\n                      </Grid>\r\n                    ) : (\r\n                      <Stack>\r\n                        {infectedTimes === \"2 lần\" ? (\r\n                          <Grid container spacing={2}>\r\n                            <Grid item lg={6}>\r\n                              <Box className={`${classes.box} ${classes.infected1}`}>\r\n                                <TextField\r\n                                  sx={{ margin: 1, minWidth: 210 }}\r\n                                  id=\"standard-basic\"\r\n                                  helperText=\"Lần nhiễm số 1\"\r\n                                  variant=\"outlined\"\r\n                                  type=\"date\"\r\n                                  className=\"register-dob\"\r\n                                  value={infectedDate1}\r\n                                  onChange={(e) => setInfectedDate1(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                  sx={{ margin: 1, minWidth: 210 }}\r\n                                  id=\"standard-basic\"\r\n                                  helperText=\"Ngày khỏi bệnh\"\r\n                                  variant=\"outlined\"\r\n                                  type=\"date\"\r\n                                  className=\"register-dob\"\r\n                                  value={curedDate1}\r\n                                  onChange={(e) => setCuredDate1(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                  sx={{ margin: 1, minWidth: 210 }}\r\n                                  id=\"standard-basic\"\r\n                                  variant=\"outlined\"\r\n                                  type=\"text\"\r\n                                  label=\"Ghi chú lần 1\"\r\n                                  className=\"addInfo-findWithPhone\"\r\n                                  value={infectedNote1}\r\n                                  onChange={(e) => setInfectedNote1(e.target.value)}\r\n                                />\r\n                              </Box>\r\n                            </Grid>\r\n                            <Grid item lg={6}>\r\n                              <Box className={`${classes.box} ${classes.infected2}`}>\r\n                                <TextField\r\n                                  sx={{ margin: 1, minWidth: 210 }}\r\n                                  id=\"standard-basic\"\r\n                                  helperText=\"Lần nhiễm số 2\"\r\n                                  variant=\"outlined\"\r\n                                  type=\"date\"\r\n                                  className=\"register-dob\"\r\n                                  value={infectedDate2}\r\n                                  onChange={(e) => setInfectedDate2(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                  sx={{ margin: 1, minWidth: 210 }}\r\n                                  id=\"standard-basic\"\r\n                                  helperText=\"Ngày khỏi bệnh\"\r\n                                  variant=\"outlined\"\r\n                                  type=\"date\"\r\n                                  className=\"register-dob\"\r\n                                  value={curedDate2}\r\n                                  onChange={(e) => setCuredDate2(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                  sx={{ margin: 1, minWidth: 210 }}\r\n                                  id=\"standard-basic\"\r\n                                  variant=\"outlined\"\r\n                                  type=\"text\"\r\n                                  label=\"Ghi chú lần 2\"\r\n                                  className=\"addInfo-findWithPhone\"\r\n                                  value={infectedNote2}\r\n                                  onChange={(e) => setInfectedNote2(e.target.value)}\r\n                                />\r\n                              </Box>\r\n                            </Grid>\r\n                          </Grid>\r\n                        ) : (\r\n                          <Stack>\r\n                            {infectedTimes === \"3 lần\" ? (\r\n                              <Grid container sx={{ justifyContent: 'center' }}>\r\n                                <Box className={`${classes.box} ${classes.infected1}`}>\r\n                                  <Grid item>\r\n                                    <TextField\r\n                                      sx={{ margin: 1, minWidth: 210 }}\r\n                                      id=\"standard-basic\"\r\n                                      helperText=\"Lần nhiễm số 1\"\r\n                                      variant=\"outlined\"\r\n                                      type=\"date\"\r\n                                      className=\"register-dob\"\r\n                                      value={infectedDate1}\r\n                                      onChange={(e) =>\r\n                                        setInfectedDate1(e.target.value)\r\n                                      }\r\n                                    />\r\n                                    <TextField\r\n                                      sx={{ margin: 1, minWidth: 210 }}\r\n                                      id=\"standard-basic\"\r\n                                      helperText=\"Ngày khỏi bệnh\"\r\n                                      variant=\"outlined\"\r\n                                      type=\"date\"\r\n                                      className=\"register-dob\"\r\n                                      value={curedDate1}\r\n                                      onChange={(e) =>\r\n                                        setCuredDate1(e.target.value)\r\n                                      }\r\n                                    />\r\n                                    <TextField\r\n                                      sx={{ margin: 1, minWidth: 210 }}\r\n                                      id=\"standard-basic\"\r\n                                      variant=\"outlined\"\r\n                                      type=\"text\"\r\n                                      label=\"Ghi chú lần 1\"\r\n                                      className=\"addInfo-findWithPhone\"\r\n                                      value={infectedNote1}\r\n                                      onChange={(e) =>\r\n                                        setInfectedNote1(e.target.value)\r\n                                      }\r\n                                    />\r\n                                  </Grid>\r\n                                </Box>\r\n                                <Box className={`${classes.box} ${classes.infected2}`}>\r\n                                  <Grid item>\r\n                                    <TextField\r\n                                      sx={{ margin: 1, minWidth: 210 }}\r\n                                      id=\"standard-basic\"\r\n                                      helperText=\"Lần nhiễm số 2\"\r\n                                      variant=\"outlined\"\r\n                                      type=\"date\"\r\n                                      className=\"register-dob\"\r\n                                      value={infectedDate2}\r\n                                      onChange={(e) =>\r\n                                        setInfectedDate2(e.target.value)\r\n                                      }\r\n                                    />\r\n                                    <TextField\r\n                                      sx={{ margin: 1, minWidth: 210 }}\r\n                                      id=\"standard-basic\"\r\n                                      helperText=\"Ngày khỏi bệnh\"\r\n                                      variant=\"outlined\"\r\n                                      type=\"date\"\r\n                                      className=\"register-dob\"\r\n                                      value={curedDate2}\r\n                                      onChange={(e) =>\r\n                                        setCuredDate2(e.target.value)\r\n                                      }\r\n                                    />\r\n                                    <TextField\r\n                                      sx={{ margin: 1, minWidth: 210 }}\r\n                                      id=\"standard-basic\"\r\n                                      variant=\"outlined\"\r\n                                      type=\"text\"\r\n                                      label=\"Ghi chú lần 2\"\r\n                                      className=\"addInfo-findWithPhone\"\r\n                                      value={infectedNote2}\r\n                                      onChange={(e) =>\r\n                                        setInfectedNote2(e.target.value)\r\n                                      }\r\n                                    />\r\n                                  </Grid>\r\n                                </Box>\r\n                                <Box className={`${classes.box} ${classes.infected3}`}>\r\n                                  <Grid item>\r\n                                    <TextField\r\n                                      sx={{ margin: 1, minWidth: 210 }}\r\n                                      id=\"standard-basic\"\r\n                                      helperText=\"Lần nhiễm số 3\"\r\n                                      variant=\"outlined\"\r\n                                      type=\"date\"\r\n                                      className=\"register-dob\"\r\n                                      value={infectedDate3}\r\n                                      onChange={(e) =>\r\n                                        setInfectedDate3(e.target.value)\r\n                                      }\r\n                                    />\r\n                                    <TextField\r\n                                      sx={{ margin: 1, minWidth: 210 }}\r\n                                      id=\"standard-basic\"\r\n                                      helperText=\"Ngày khỏi bệnh\"\r\n                                      variant=\"outlined\"\r\n                                      type=\"date\"\r\n                                      className=\"register-dob\"\r\n                                      value={curedDate3}\r\n                                      onChange={(e) =>\r\n                                        setCuredDate3(e.target.value)\r\n                                      }\r\n                                    />\r\n                                    <TextField\r\n                                      sx={{ margin: 1, minWidth: 210 }}\r\n                                      id=\"standard-basic\"\r\n                                      variant=\"outlined\"\r\n                                      type=\"text\"\r\n                                      label=\"Ghi chú lần 3\"\r\n                                      className=\"addInfo-findWithPhone\"\r\n                                      value={infectedNote3}\r\n                                      onChange={(e) =>\r\n                                        setInfectedNote3(e.target.value)\r\n                                      }\r\n                                    />\r\n                                  </Grid>\r\n                                </Box>\r\n                              </Grid>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </Stack>\r\n                        )}\r\n                      </Stack>\r\n                    )}\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      type=\"sumbit\"\r\n                      sx={{ marginBottom: 5, marginTop: 2 }}\r\n                      onClick={submitSelfDeclareHandler}\r\n                    >\r\n                      Gửi\r\n                    </Button>\r\n                  </Stack>\r\n                </Grid>\r\n              </Grid>\r\n\r\n            </CardContent>\r\n          ) : (\r\n            <Stack className=\"addRole-form\">\r\n            </Stack>\r\n          )}\r\n        </Card>\r\n      ) : (\r\n        <Stack>\r\n          <Stack>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              Vui lòng đăng nhập để tiếp tục\r\n            </Typography>\r\n          </Stack>\r\n          <Stack alignItems=\"center\">\r\n            <Button variant=\"contained\">Quay lại trang chủ</Button>\r\n          </Stack>\r\n        </Stack>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\n\r\nexport default SelfDeclare;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    disableGutters\n  };\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;"],"names":["totalUserInfo","setTotalUserInfo","useState","totalInjectionInfo","setTotalInjectionInfo","infectedTimes","setInfectedTimes","infectedDate1","setInfectedDate1","infectedDate2","setInfectedDate2","infectedDate3","setInfectedDate3","curedDate1","setCuredDate1","curedDate2","setCuredDate2","curedDate3","setCuredDate3","infectedNote1","setInfectedNote1","infectedNote2","setInfectedNote2","infectedNote3","setInfectedNote3","userInfo","setUserInfo","userRole","setUserRole","declareRefInfo","setDeclareRefInfo","declareRefId","setDeclareRefId","injectRefInfo","setInjectRefInfo","injectRefId","setInjectRefId","userEmail","setUserEmail","phone","setPhone","isLoggedIn","setIsLoggedIn","userId","setUserId","injectionInfo","setInjectionInfo","injectionId","setInjectionId","authInfo","setAuthInfo","isCurrentlyInfected","setIsCurrentlyInfected","classes","makeStyles","theme","header","marginBottom","textTransform","textField","box","border","borderRadius","boxShadow","padding","margin","infected1","backgroundColor","infected2","infected3","useStyles","onAuthStateChanged","auth","currentUser","email","useEffect","onSnapshot","dataRef","orderBy","snapshot","users","docs","forEach","doc","push","data","id","queryGetUserInfoByEmail","assignedRole","name","queryGetUserInfoByPhone","selfDeclareRef","_snapshot","docChanges","length","addDoc","firstDose","secondDose","thirdDose","numberOfInjections","injectDate1","injectDate2","injectDate3","injectPerson1","injectPerson2","injectPerson3","injectionRef","sx","textAlign","container","spacing","item","sm","variant","className","gutterBottom","label","value","InputProps","readOnly","fullWidth","dob","alignItems","m","minWidth","labelId","onChange","e","target","disabled","helperText","type","lg","justifyContent","marginTop","onClick","preventDefault","setDoc","db","getMenuItemUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","dense","divider","disableGutters","gutters","_extends","typography","body1","display","position","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","vars","palette","backgroundClip","action","hover","menuItemClasses","primary","mainChannel","selectedOpacity","alpha","main","focusOpacity","hoverOpacity","focus","opacity","disabledOpacity","dividerClasses","marginLeft","listItemTextClasses","listItemIconClasses","breakpoints","up","body2","fontSize","React","inProps","ref","useThemeProps","autoFocus","component","focusVisibleClassName","role","tabIndex","tabIndexProp","other","_objectWithoutPropertiesLoose","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","selected","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","undefined","_jsx","children","clsx","focusVisible"],"sourceRoot":""}