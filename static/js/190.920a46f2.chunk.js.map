{"version":3,"file":"static/js/190.920a46f2.chunk.js","mappings":"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","sources":["views/other/Role.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { onSnapshot, setDoc, doc } from \"@firebase/firestore\";\r\nimport {\r\n  auth,\r\n  queryGetUserInfoByEmail,\r\n  queryGetUserInfoByPhone,\r\n  dataRef,\r\n  db,\r\n  injectionRef,\r\n  rolesRef,\r\n} from \"../../firebase/firebase\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\n\r\nimport { Card, CardContent, Container, Menu, Box, Button, TextField, Stack, MenuItem, FormControl, Select, InputLabel, Typography, Autocomplete, Grid } from \"@mui/material\";\r\n\r\nimport { AdminContext } from '../../context/adminContext';\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport { IconSquareX } from '@tabler/icons'\r\n\r\nconst AddRole = () => {\r\n  const { isAdmin } = useContext(AdminContext);\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [roleSpecify, setRoleSpecify] = useState(\"\");\r\n  const [totalUserInfo, setTotalUserInfo] = useState(\"\");\r\n  const [userInfo, setUserInfo] = useState(\"\");\r\n  const [injectionInfo, setInjectionInfo] = useState(\"\");\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [userRole, setUserRole] = useState(\"\");\r\n\r\n  const [autoCompleteVal, setAutocompleteVal] = useState(\"\");\r\n\r\n  const [currentRole, setCurrentRole] = useState(\"\");\r\n  const [roleList, setRoleList] = useState([]);\r\n  const [roleName, setRoleName] = useState(\"\");\r\n\r\n  const [isAddRole, setIsAddRole] = useState(false);\r\n  const [isDeleteRole, setIsDeleteRole] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    header: {\r\n      marginBottom: \"30px\",\r\n      textTransform: \"uppercase\",\r\n    },\r\n    textField: {\r\n      margin: \"20px 0\",\r\n    },\r\n    box: {\r\n      border: '2px solid black',\r\n      borderRadius: '10px',\r\n      boxShadow: '1px 2px 4px rgba(0, 0, 0, 0.4)',\r\n      padding: '20px',\r\n      width: '300px',\r\n      margin: '20px auto'\r\n    },\r\n    icons: {\r\n      cursor: 'pointer'\r\n    },\r\n    button: {\r\n      margin: '10px 30px'\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  onAuthStateChanged(auth, (currentUser) => {\r\n    if (currentUser) {\r\n      setUserEmail(currentUser.email);\r\n      onSnapshot(queryGetUserInfoByEmail(userEmail), (snapshot) => {\r\n        snapshot.forEach((data) => setUserRole(data.data().assignedRole));\r\n      });\r\n    }\r\n  });\r\n\r\n  const findInfoByPhoneHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (totalUserInfo) {\r\n      onSnapshot(queryGetUserInfoByPhone(dataRef, phone), (snapshot) => {\r\n        snapshot.forEach((data) => {\r\n          setUserInfo(data.data());\r\n          setUserId(data.id);\r\n          setCurrentRole(data.data().assignedRole);\r\n        });\r\n      });\r\n      onSnapshot(queryGetUserInfoByPhone(injectionRef, phone), (snapshot) => {\r\n        snapshot.forEach((data) => {\r\n          setInjectionInfo(data.data());\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  const submitInfoHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    setDoc(doc(db, \"userData\", userId), {\r\n      ...userInfo,\r\n      assignedRole: role,\r\n      //   role: roleSpecify,\r\n    });\r\n    setRole(\"\");\r\n    setRoleSpecify(\"\");\r\n  };\r\n\r\n  const backToMainPagehandler = (e) => {\r\n    e.preventDefault();\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const removeItemAtOnce = (arr, value) => {\r\n    let index = arr.indexOf(value);\r\n    if (index > -1) {\r\n      arr.splice(index, 1);\r\n    }\r\n  };\r\n\r\n  const addRole = (e) => {\r\n    e.preventDefault();\r\n    if (roleList.indexOf(roleName) === -1) {\r\n      roleList.push(roleName)\r\n      setDoc(doc(db, \"roleData\", \"taQPWqV16yQr1NZOkEXM\"), {\r\n        roles: roleList,\r\n      });\r\n    } else {\r\n      window.alert(\"Đã có role này trên hệ thống\")\r\n    }\r\n    setRoleName(\"\")\r\n  };\r\n\r\n  const removeRole = (e) => {\r\n    e.preventDefault();\r\n    removeItemAtOnce(roleList, autoCompleteVal);\r\n\r\n    setDoc(doc(db, \"roleData\", \"taQPWqV16yQr1NZOkEXM\"), {\r\n      roles: roleList,\r\n    });\r\n    setAutocompleteVal(\"\")\r\n  };\r\n\r\n  useEffect(() => {\r\n    onSnapshot(dataRef, (snapshot) => {\r\n      let users = [];\r\n      snapshot.docs.forEach((doc) => {\r\n        users.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setTotalUserInfo(users);\r\n    });\r\n    onSnapshot(rolesRef, (snapshot) => {\r\n      let data = [];\r\n      snapshot.docs.forEach((doc) => {\r\n        data.push(...doc.data().roles);\r\n      });\r\n      setRoleList(data);\r\n    });\r\n  }, [userId, userRole, autoCompleteVal]);\r\n\r\n  if (!userRole) {\r\n    return <div> Loading </div>;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {isAdmin &&\r\n        <Card sx={{ marginBottom: '50px', textAlign: 'center' }}>\r\n          {/* Giao diện chỉ admin nhìn thấy */}\r\n          <CardContent>\r\n            <Grid container>\r\n              <Grid item sm={6}>\r\n                {isAddRole ?\r\n                  <Box className={classes.box}>\r\n                    <Stack sx={{ alignItems: 'flex-end' }}>\r\n                      <IconSquareX className={classes.icons} onClick={() => setIsAddRole(false)} />\r\n                    </Stack>\r\n                    <Typography variant=\"h3\">Tạo vai trò</Typography>\r\n                    <FormControl>\r\n                      <TextField\r\n                        className={classes.textField}\r\n                        label=\"tạo role\"\r\n                        onChange={e => setRoleName(e.target.value)}\r\n                        value={roleName}\r\n                      />\r\n                      <Button variant=\"contained\" color=\"secondary\" onClick={addRole}>Tạo</Button>\r\n                    </FormControl>\r\n                  </Box>\r\n                  :\r\n                  <Button variant=\"contained\" color=\"secondary\" className={classes.button} onClick={() => setIsAddRole(true)}>Tạo vai trò</Button>\r\n                }\r\n              </Grid>\r\n              <Grid item sm={6}>\r\n                {isDeleteRole ?\r\n                  <Box className={classes.box}>\r\n                    <Stack sx={{ alignItems: 'flex-end' }}>\r\n                      <IconSquareX className={classes.icons} onClick={() => setIsDeleteRole(false)} />\r\n                    </Stack>\r\n                    <Typography variant=\"h3\">Xóa vai trò</Typography>\r\n                    <Autocomplete\r\n                      className={classes.textField}\r\n                      isOptionEqualToValue={(option, value) => option.id === value.id}\r\n                      disablePortal\r\n                      onChange={(event, value) => setAutocompleteVal(value)}\r\n                      value={autoCompleteVal}\r\n                      id=\"combo-box-demo\"\r\n                      options={roleList}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} label=\"Chọn vai trò\" />\r\n                      )}\r\n                    />\r\n                    <Button variant=\"contained\" color=\"error\" onClick={removeRole}>\r\n                      Xóa\r\n                    </Button>\r\n                  </Box>\r\n                  :\r\n                  <Button variant=\"contained\" color=\"error\" className={classes.button} onClick={() => setIsDeleteRole(true)}>Xóa vai trò</Button>\r\n                }\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      }\r\n\r\n      <Card>\r\n        {userRole === \"admin\" ? (\r\n          userInfo ? (\r\n            <CardContent sx={{ textAlign: \"center\" }}>\r\n              <Typography variant=\"h2\" className={classes.header} gutterBottom>\r\n                Thông tin người dùng\r\n              </Typography>\r\n              <TextField\r\n                className={classes.textField}\r\n                label=\"Họ và tên:\"\r\n                value={userInfo.name}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                className={classes.textField}\r\n                label=\"Vai trò:\"\r\n                value={userInfo.assignedRole}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n              />\r\n              <div>\r\n                <Stack className=\"addRole-form\">\r\n                  <FormControl variant=\"standard\" sx={{ m: 2, minWidth: 120 }}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Phân quyền{\" \"}\r\n                    </InputLabel>{\" \"}\r\n                    <Select\r\n                      className=\"addRole-role\"\r\n                      onChange={(e) => setRole(e.target.value)}\r\n                      value={role}\r\n                      label={\"Phân quyền\"}\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                    >\r\n                      <MenuItem value=\"user\"> User </MenuItem>\r\n                      <MenuItem value=\"moderator\"> Moderator </MenuItem>{\" \"}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Stack>\r\n                <Stack className=\"addRole-form\">\r\n                  <FormControl variant=\"standard\" sx={{ m: 2, minWidth: 120 }}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Vai trò{\" \"}\r\n                    </InputLabel>{\" \"}\r\n                    <Select\r\n                      className=\"addRole-role\"\r\n                      onChange={(e) => setRoleSpecify(e.target.value)}\r\n                      value={roleSpecify}\r\n                      label={\"Vai trò \"}\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                    >\r\n                      <MenuItem value=\"1A\"> 1A </MenuItem>\r\n                      <MenuItem value=\"1B\"> 1B </MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Stack>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  onClick={submitInfoHandler}\r\n                >\r\n                  Gửi\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          ) : (\r\n            <CardContent>\r\n              <form className=\"addRole-form\">\r\n                <Stack spacing={2}>\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    variant=\"standard\"\r\n                    type=\"text\"\r\n                    label=\"Tìm theo số điện thoại\"\r\n                    className=\"addInfo-findWithPhone\"\r\n                    value={phone}\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    type=\"sumbit\"\r\n                    onClick={findInfoByPhoneHandler}\r\n                  >\r\n                    Tìm\r\n                  </Button>\r\n                </Stack>\r\n              </form>\r\n            </CardContent>\r\n          )\r\n        ) : (\r\n          <CardContent>\r\n            <div>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                gutterBottom\r\n                sx={{ color: \"red\" }}\r\n              >\r\n                Bạn không đủ quyền hạn để truy cập{\" \"}\r\n              </Typography>{\" \"}\r\n            </div>{\" \"}\r\n            <Button variant=\"contained\" onClick={backToMainPagehandler}>\r\n              Quay lại trang chủ{\" \"}\r\n            </Button>{\" \"}\r\n          </CardContent>\r\n        )}{\" \"}\r\n      </Card>\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default AddRole;"],"names":["isAdmin","useContext","AdminContext","phone","setPhone","useState","role","setRole","roleSpecify","setRoleSpecify","totalUserInfo","setTotalUserInfo","userInfo","setUserInfo","injectionInfo","setInjectionInfo","userEmail","setUserEmail","userId","setUserId","userRole","setUserRole","autoCompleteVal","setAutocompleteVal","currentRole","setCurrentRole","roleList","setRoleList","roleName","setRoleName","isAddRole","setIsAddRole","isDeleteRole","setIsDeleteRole","navigate","useNavigate","classes","makeStyles","theme","header","marginBottom","textTransform","textField","margin","box","border","borderRadius","boxShadow","padding","width","icons","cursor","button","useStyles","onAuthStateChanged","auth","currentUser","email","onSnapshot","queryGetUserInfoByEmail","snapshot","forEach","data","assignedRole","useEffect","dataRef","users","docs","doc","push","id","rolesRef","roles","sx","textAlign","container","item","sm","className","alignItems","onClick","variant","label","onChange","e","target","value","color","preventDefault","indexOf","setDoc","db","window","alert","isOptionEqualToValue","option","disablePortal","event","options","renderInput","params","arr","index","splice","removeItemAtOnce","gutterBottom","name","InputProps","readOnly","fullWidth","m","minWidth","labelId","type","spacing","queryGetUserInfoByPhone","injectionRef"],"sourceRoot":""}